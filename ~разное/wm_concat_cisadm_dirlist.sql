create TYPE WMSYS.wm_concat_impl AUTHID CURRENT_USER AS OBJECT
(
CURR_STR VARCHAR2(32767),
CURR_STR_C CLOB,

STATIC FUNCTION ODCIAGGREGATEINITIALIZE(SCTX IN OUT WM_CONCAT_IMPL) RETURN NUMBER,

MEMBER FUNCTION ODCIAGGREGATEITERATE(SELF IN OUT WM_CONCAT_IMPL, P1 VARCHAR2) RETURN NUMBER,

MEMBER FUNCTION ODCIAGGREGATETERMINATE(SELF WM_CONCAT_IMPL, RETURNVALUE OUT CLOB, FLAGS NUMBER) RETURN NUMBER,

MEMBER FUNCTION ODCIAGGREGATEMERGE(SELF IN OUT WM_CONCAT_IMPL, SCTX2 WM_CONCAT_IMPL) RETURN NUMBER
);

GRANT EXECUTE ON WMSYS.WM_CONCAT_IMPL TO PUBLIC;

create TYPE BODY WMSYS.wm_concat_impl IS
STATIC FUNCTION ODCIAGGREGATEINITIALIZE(SCTX IN OUT WM_CONCAT_IMPL) RETURN NUMBER IS
BEGIN
SCTX := WM_CONCAT_IMPL(NULL,NULL) ;
RETURN ODCICONST.SUCCESS;
END;

MEMBER FUNCTION ODCIAGGREGATEITERATE(SELF IN OUT WM_CONCAT_IMPL, P1 VARCHAR2) RETURN NUMBER IS
BEGIN
IF (CURR_STR_C IS NULL AND (CURR_STR IS NULL OR LENGTH(CURR_STR)<29950)) THEN
IF(CURR_STR IS NOT NULL) THEN 
CURR_STR := CURR_STR || ',' || P1;
ELSE
CURR_STR := P1;
END IF;
ELSE
IF (CURR_STR_C IS NULL) THEN
CURR_STR_C := CURR_STR ;
CURR_STR := NULL ;
END IF ;

  CURR_STR_C := CURR_STR_C || ',' || P1;
END IF ;

RETURN ODCICONST.SUCCESS;
END;

MEMBER FUNCTION ODCIAGGREGATETERMINATE(SELF WM_CONCAT_IMPL, RETURNVALUE OUT CLOB, FLAGS NUMBER) RETURN NUMBER IS
BEGIN
IF (CURR_STR IS NOT NULL) THEN
RETURNVALUE := CURR_STR ;
ELSE
RETURNVALUE := CURR_STR_C ;
END IF ;

RETURN ODCICONST.SUCCESS;
END;

MEMBER FUNCTION ODCIAGGREGATEMERGE(SELF IN OUT WM_CONCAT_IMPL, SCTX2 WM_CONCAT_IMPL) RETURN NUMBER IS
BEGIN
IF(SCTX2.CURR_STR IS NOT NULL) THEN 
SELF.CURR_STR := SELF.CURR_STR || ',' || SCTX2.CURR_STR ;
END IF;

RETURN ODCICONST.SUCCESS;
END;
END;

/

GRANT EXECUTE ON WMSYS.WM_CONCAT_IMPL TO PUBLIC;

create FUNCTION WMSYS.wm_concat(P1 VARCHAR2) RETURN CLOB AGGREGATE USING WMSYS.WM_CONCAT_IMPL ;
/

GRANT EXECUTE ON WMSYS.WM_CONCAT TO PUBLIC;


create public synonym WM_CONCAT FOR WMSYS.WM_CONCAT;

CREATE OR REPLACE AND RESOLVE JAVA SOURCE NAMED CISADM.DIRLIST as 
import java.io.File;
import java.sql.*;

public class DirList{
public static void getList(String directory) throws SQLException {
Connection conn = DriverManager.getConnection("jdbc:default:connection:");
String sql = "INSERT INTO CM_DIR_LIST (FILENAME) VALUES (?)";

File path = new File(directory);
String[] list = path.list();
String element;

for (int i = 0; i < list.length; i++) {
  element = list[i];
     PreparedStatement pstmt = conn.prepareStatement(sql);
pstmt.setString(1, element);

pstmt.executeUpdate();
pstmt.close();
};
};
};
/